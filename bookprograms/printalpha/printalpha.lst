     1                                  ; printalpha.asm
     2                                  ; description: prints the alphabet
     3                                  
     4                                  SECTION .data; variables section
     5                                  
     6 00000000 410A                     char: db "A", 10; 10='\n'
     7                                   len:  equ $-char; this should always be two but lets do an assembly time calc so we can see how it works
     8                                  
     9                                  SECTION .BSS; uninited data section
    10                                  
    11                                  
    12                                  SECTION .text; code section
    13                                  
    14                                  
    15                                  global _start
    16                                  
    17                                  
    18                                  _start: ;main function? routine?
    19 00000000 90                        nop ;for gdb
    20                                    ;range for alpha in hex is 41h to 5A
    21                                  
    22 00000001 BF19000000                mov edi, 19h; move 26 to edi so we can loop 26 times
    23 00000006 B9[00000000]              mov ecx, char  ;move addr to start of char to ecx
    24 0000000B BA02000000                mov edx, len;because I want to see len being 1
    25                                    
    26 00000010 B804000000                mov eax, 4; specify syswrite call service number=4
    27 00000015 BB01000000                mov ebx, 1; specify file descriptor for syswrite 1=stdout
    28                                  
    29 0000001A CD80                      int 80H; make call to print current character
    30                                  
    31 0000001C FE01                      aloop: inc byte [ecx] ; increment character so we get next capital letter in alphabet
    32 0000001E B804000000                  mov eax, 4; specify syswrite call service number=4
    33 00000023 BB01000000                  mov ebx, 1; specify file descriptor for syswrite 1=stdout
    34 00000028 CD80                        int 80H; make call to print current character
    35 0000002A 4F                          dec edi; decrease out loop counter. This must be the first operation before jump because jnz test if the result of last op was zero
    36 0000002B 75EF                        jnz aloop; repeat loop while edi greater than zero
    37                                  
    38 0000002D 90                        nop;for gdb so we dont step off the edge and crash the program
    39                                  
    40                                    ;should've printed our stuff so lets exit
    41 0000002E B801000000                mov eax, 1; load exit service number to eax
    42 00000033 BB00000000                mov ebx, 0; load return code to ebx
    43 00000038 CD80                      int 80h; make the call to exit the program
    44                                  
